"""init schema

Revision ID: d9334afd8a12
Revises: 
Create Date: 2025-10-07 17:09:21.994568

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = 'd9334afd8a12'
down_revision: Union[str, Sequence[str], None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_duas_id'), table_name='duas')
    op.drop_index(op.f('ix_duas_title'), table_name='duas')
    op.drop_table('duas')
    op.alter_column('users', 'ip_address',
               existing_type=sa.TEXT(),
               type_=sa.String(),
               existing_nullable=True)
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column('users', 'ip_address',
               existing_type=sa.String(),
               type_=sa.TEXT(),
               existing_nullable=True)
    op.create_table('duas',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('title', sa.VARCHAR(length=255), autoincrement=False, nullable=False),
    sa.Column('arabic', sa.TEXT(), autoincrement=False, nullable=False),
    sa.Column('transliteration', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('translation', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('audio_map', postgresql.JSON(astext_type=sa.Text()), autoincrement=False, nullable=True),
    sa.Column('is_active', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name=op.f('duas_pkey'))
    )
    op.create_index(op.f('ix_duas_title'), 'duas', ['title'], unique=False)
    op.create_index(op.f('ix_duas_id'), 'duas', ['id'], unique=False)
    op.create_table('tasks',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('title', sa.VARCHAR(length=255), autoincrement=False, nullable=False),
    sa.Column('description', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('status', sa.VARCHAR(length=50), autoincrement=False, nullable=True),
    sa.Column('priority', sa.VARCHAR(length=50), autoincrement=False, nullable=True),
    sa.Column('category', sa.VARCHAR(length=100), autoincrement=False, nullable=True),
    sa.Column('start_date', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('due_date', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=True),
    sa.Column('updated_at', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True),
    sa.Column('assigned_to', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('created_by', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('parent_task_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('completion_percentage', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('is_recurring', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.Column('is_deleted', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.Column('tags', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['assigned_to'], ['users.id'], name=op.f('tasks_assigned_to_fkey')),
    sa.ForeignKeyConstraint(['created_by'], ['users.id'], name=op.f('tasks_created_by_fkey')),
    sa.ForeignKeyConstraint(['parent_task_id'], ['tasks.id'], name=op.f('tasks_parent_task_id_fkey')),
    sa.PrimaryKeyConstraint('id', name=op.f('tasks_pkey'))
    )
    op.create_index(op.f('ix_tasks_id'), 'tasks', ['id'], unique=False)
    # ### end Alembic commands ###
